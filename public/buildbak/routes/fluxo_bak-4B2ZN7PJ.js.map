{
  "version": 3,
  "sources": ["../../../app/routes/fluxo_bak.tsx"],
  "sourcesContent": ["import type { LoaderArgs, ActionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  useLoaderData,\n  isRouteErrorResponse,\n  useRouteError,\n} from \"@remix-run/react\";\nimport { Navbar } from \"~/components/Navbar\";\nimport {\n  groupReceitasAgrupadas,\n  receitasPorCentroData,\n  receitasPorData,\n} from \"~/utils/receitas.server\";\nimport { format } from \"date-fns\";\nimport { pt } from \"date-fns/locale\";\nimport _ from \"lodash\";\nimport { despesasPorData } from \"~/utils/despesas.server\";\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const dataAtual = format(new Date(), \"MMM-yyyy\", { locale: pt });\n  const url = new URL(request.url);\n  const par = url.searchParams.get(\"rec\");\n  let parametro = par ? par : dataAtual;\n  const totReceitas = await groupReceitasAgrupadas(String(parametro));\n  const ReceitasM = await receitasPorCentroData(String(parametro));\n  const ReceitasMJun = await receitasPorCentroData(String(\"jun-2023\"));\n  const recDataun = await receitasPorData();\n  const desData = await despesasPorData();\n\n  const paseDate = (s: any) => {\n    let [d, m, y] = s.split(/\\D/);\n    return new Date(Date.UTC(y, m - 1, d));\n  };\n\n  const recData = recDataun.sort(function (a, b) {\n    var titleA = a.data.split(\"/\").reverse().join(\"\"),\n      titleB = b.data.split(\"/\").reverse().join(\"\");\n    return titleA > titleB ? 1 : titleA < titleB ? -1 : 0;\n  });\n\n  return { totReceitas, ReceitasM, ReceitasMJun, recDataun, desData };\n};\n\nexport const action = async ({ request }: ActionArgs) => {\n  return null;\n};\n\nexport default function Fluxo() {\n  const { totReceitas, ReceitasM, ReceitasMJun, recDataun, desData } =\n    useLoaderData<typeof loader>();\n\n  function invert(d: any) {\n    const a = d.toString().slice(0, 10).replace(/-/g, \"/\");\n    return a.substr(8, 2) + \"/\" + a.substr(5, 2) + \"/\" + a.substr(0, 4);\n  }\n\n  // const teste = desData.map((m) =>\n  //   m.data.toString().slice(0, 10).replace(/-/g, \"/\")\n  // );\n\n  const dias = [\n    \"01/05/2023\",\n    \"02/05/2023\",\n    \"03/05/2023\",\n    \"04/05/2023\",\n    \"05/05/2023\",\n    \"06/05/2023\",\n    \"07/05/2023\",\n    \"08/05/2023\",\n    \"09/05/2023\",\n    \"10/05/2023\",\n    \"11/05/2023\",\n    \"12/05/2023\",\n    \"13/05/2023\",\n    \"14/05/2023\",\n    \"15/05/2023\",\n    \"16/05/2023\",\n    \"17/05/2023\",\n    \"18/05/2023\",\n    \"19/05/2023\",\n    \"20/05/2023\",\n    \"21/05/2023\",\n    \"22/05/2023\",\n    \"23/05/2023\",\n    \"24/05/2023\",\n    \"25/05/2023\",\n    \"26/05/2023\",\n    \"27/05/2023\",\n    \"28/05/2023\",\n    \"29/05/2023\",\n    \"30/05/2023\",\n    \"31/05/2023\",\n  ];\n\n  return (\n    <>\n      <Navbar />\n\n      <div className=\"flex container mx-auto flex-col\">\n        <div className=\"overflow-x-auto sm:-mx-6 lg:-mx-8\">\n          <div className=\"inline-block min-w-full py-2 sm:px-6 lg:px-8\">\n            <div className=\"overflow-hidden\">\n              <table className=\"min-w-full text-left text-sm font-light\">\n                <thead className=\"border-b font-medium dark:border-neutral-500\">\n                  <tr>\n                    <th className=\"text-center\">Receitas</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    {dias.map((d: any, index: number) => (\n                      <td\n                        key={index}\n                        scope=\"col\"\n                        className=\"px-3 font-normal text-gray-500 text-center py-4 \">\n                        {d.substr(0, 5)}\n\n                        <div className=\"mt-2 text-base font-semibold divide-y divide-dashed divide-gray-600\">\n                          {recDataun\n                            .filter((r: any) => r.data === d)\n                            .map((data) =>\n                              data._sum.valor?.toLocaleString(\"pt-br\", {\n                                minimumFractionDigits: 2,\n                                maximumFractionDigits: 2,\n                              })\n                            )}\n                        </div>\n                        <div className=\"mt-2 text-red-500 text-base font-semibold divide-y divide-dashed divide-gray-600\">\n                          {desData\n                            .filter((r: any) => invert(r.data) === d)\n                            .map((data) =>\n                              (data._sum.valor * -1).toLocaleString(\"pt-br\", {\n                                minimumFractionDigits: 2,\n                                maximumFractionDigits: 2,\n                              })\n                            )}\n                          {/* {desData\n                            .filter((r: any) => invert(r.data) === d)\n                            .map((data) => data._sum.valor * -1)} */}\n                        </div>\n\n                        {/* recDataun\n                            .filter((r: any) => r.data === d)\n                            .map((data) => data._sum.valor) +\n                            (d.substr(0, 2) - 1 < 10\n                              ? \"0\" + (d.substr(0, 2) - 1)\n                              : d.substr(0, 2) - 1) +\n                            d.substr(2, 10)} */}\n\n                        <div>\n                          {recDataun\n                            .filter((r: any) => r.data === d)\n                            .map((data) => data._sum.valor) +\n                            recDataun\n                              .filter(\n                                (r: any) =>\n                                  r.data ===\n                                  (d.substr(0, 2) - 1 < 10\n                                    ? \"0\" + (d.substr(0, 2) - 1)\n                                    : d.substr(0, 2) - 1) +\n                                    d.substr(2, 10)\n                              )\n                              .map((data) => data._sum.valor)}\n                        </div>\n                      </td>\n                    ))}\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* <div className=\"flex justify-center \">\n        <table className=\" w-32 text-sm text-left mt-4 text-gray-500 border-l-2 border-r-2 border-slate-100\">\n          <tbody>\n            {recData.map((rec: any, index: number) => (\n              <td\n                key={index}\n                className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\">\n                <td\n                  scope=\"row\"\n                  className=\"px-6 py-2  font-medium text-gray-900 dark:text-white whitespace-nowrap\">\n                  {rec.data}\n                </td>\n                <tr className=\"px-6 font-mono  text-right \">\n                  {rec._sum.valor.toLocaleString(\"pt-br\", {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2,\n                  })}\n                </tr>\n              </td>\n            ))}\n          </tbody>\n        </table>\n      </div> */}\n    </>\n  );\n}\n\nexport function ErrorBoundary() {\n  const error = useRouteError();\n  if (isRouteErrorResponse(error)) {\n    return <div>ERRO</div>;\n  }\n  return <div />;\n}\n"],
  "mappings": "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",
  "names": []
}
