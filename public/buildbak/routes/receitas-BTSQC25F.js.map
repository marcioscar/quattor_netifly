{
  "version": 3,
  "sources": ["../../../app/routes/receitas.tsx"],
  "sourcesContent": ["import type { LoaderFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, NavLink, useLoaderData } from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport { Navbar } from \"~/components/Navbar\";\nimport type { tipoRec } from \"~/utils/types.server\";\nimport { format } from \"date-fns\";\nimport _ from \"lodash\";\nimport { baixarReceita, getReceitas } from \"~/utils/receitas.server\";\nimport { requireUserSession } from \"~/utils/auth.server\";\nimport {\n  RiMoneyDollarCircleLine,\n  RiCalendarEventFill,\n  RiSearch2Line,\n} from \"react-icons/ri\";\n\nimport type { ActionArgs } from \"@remix-run/node\";\nexport async function action({ request }: ActionArgs) {\n  const formData = await request.formData();\n  await baixarReceita(formData.get(\"_id\"));\n  return redirect(``);\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await requireUserSession(request);\n  // const receitas = await receitasPorCentro();\n  const receitas = await getReceitas();\n  // const receitas = rec.sort(function (a, b) {\n  //   var titleA = a.data.split(\"/\").reverse().join(\"\"),\n  //     titleB = b.data.split(\"/\").reverse().join(\"\");\n  //   return titleA > titleB ? -1 : titleA < titleB ? 1 : 0;\n  // });\n\n  return json({ receitas });\n};\nexport default function Receitas() {\n  const { receitas } = useLoaderData();\n  const dataAtual = format(new Date(), \"dd/MM/yyyy\");\n  const [filtrar, setFiltrar] = useState(\"\");\n  const [filtrardt1, setFiltrardt1] = useState(dataAtual);\n  const [filtrardt2, setFiltrardt2] = useState(dataAtual);\n\n  const receitasdata = receitas?.filter(\n    (receitas: any) =>\n      receitas.data.includes(filtrardt1) || receitas.data.includes(filtrardt2)\n  );\n\n  const receitaFilter = receitasdata?.filter(\n    (receitas: { centro: string; data: string; valor: any }) =>\n      receitas.centro.toLowerCase().includes(filtrar.toLowerCase()) ||\n      receitas.data.toLowerCase().includes(filtrar.toLowerCase()) ||\n      receitas.valor.toString().includes(filtrar)\n  );\n\n  const total = _.sumBy(receitaFilter, \"valor\");\n\n  return (\n    <>\n      <Navbar />\n\n      <h1 className=\"flex  justify-center font-bold text-slate-500 text-xl\">\n        RECEITAS\n      </h1>\n\n      <div className=\"flex justify-around items-center\">\n        <div className=\"relative w-2/6 ml-3\">\n          <div className=\"flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none\">\n            <RiSearch2Line className=\" text-slate-500\" />\n          </div>\n          <input\n            type=\"search\"\n            id=\"search\"\n            value={filtrar}\n            onChange={(e) => setFiltrar(e.target.value)}\n            placeholder=\"Procurar\"\n            className=\"block p-2 pl-10 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300  \"\n          />\n        </div>\n        <div className=\"flex space-x-3\">\n          <div className=\"relative w-1/2\">\n            <div className=\"flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none\">\n              <RiCalendarEventFill className=\" text-slate-500\" />\n            </div>\n            <input\n              type=\"searchdt1\"\n              id=\"searchdt1\"\n              value={filtrardt1}\n              onChange={(e) => setFiltrardt1(e.target.value)}\n              placeholder=\"Data\"\n              className=\"block p-2 pl-10 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300  \"\n            />\n          </div>\n          <div className=\"relative w-1/2\">\n            <div className=\"flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none\">\n              <RiCalendarEventFill className=\" text-slate-500\" />\n            </div>\n            <input\n              type=\"searchdt1\"\n              id=\"searchdt1\"\n              value={filtrardt2}\n              onChange={(e) => setFiltrardt2(e.target.value)}\n              placeholder=\"Data\"\n              className=\"block p-2 pl-10 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300  \"\n            />\n          </div>\n        </div>\n\n        <NavLink\n          className=\" flex mr-4  focus:outline-none text-white bg-blue-600 hover:bg-blue-800 focus:ring-4 focus:ring-yellow-300  rounded-lg text-sm px-5 py-2.5  mb-2 dark:focus:ring-yellow-900\"\n          to=\"new\">\n          Nova\n        </NavLink>\n      </div>\n      <Form method=\"post\">\n        <div className=\"text-center font-medium  text-lg mt-2 text-slate-600\">\n          Total:{\" \"}\n          {total.toLocaleString(\"pt-br\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          })}\n        </div>\n        <div className=\"flex justify-center  \">\n          <table className=\" w-11/12 text-sm text-left mt-4 text-gray-500 border-l-2 border-r-2 border-slate-100\">\n            <thead className=\"text-xs text-gray-700 uppercase bg-stone-100 dark:bg-gray-700 dark:text-gray-400\">\n              <tr>\n                <th scope=\"col\" className=\"px-6 py-3\">\n                  Centro\n                </th>\n\n                <th scope=\"col\" className=\"px-6 py-3 text-right\">\n                  Valor\n                </th>\n                <th scope=\"col\" className=\"px-6 py-3 text-center\">\n                  Data\n                </th>\n                <th scope=\"col\" className=\"px-6 py-3 text-center\">\n                  Forma pagamento\n                </th>\n                <th scope=\"col\" className=\"px-6 py-3 text-center\">\n                  Status\n                </th>\n                <th scope=\"col\" className=\" text-center\">\n                  Receber\n                </th>\n\n                <th scope=\"col\" className=\"px-6 py-3\">\n                  <span className=\"sr-only\">Editar</span>\n                </th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {receitaFilter.map((rec: tipoRec, index: number) => (\n                <tr\n                  key={index}\n                  className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\">\n                  <th\n                    scope=\"row\"\n                    className=\"px-6 py-2  font-medium text-gray-900 dark:text-white whitespace-nowrap\">\n                    {rec.centro}\n                  </th>\n                  <td className=\"px-6 font-mono  text-right \">\n                    {rec.valor.toLocaleString(\"pt-br\", {\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2,\n                    })}\n                  </td>\n                  <td className=\"px-6 font-mono  text-center \">{rec.data}</td>\n                  <td className=\"px-6 font-mono  text-right \">{rec.forma}</td>\n                  <td className=\"px-6 font-mono  text-right \">{rec.status}</td>\n                  <td className=\"text-right\">\n                    <button name=\"_id\" value={rec.id} type=\"submit\">\n                      <RiMoneyDollarCircleLine className=\" text-center text-green-500   w-6 h-6 \" />\n                    </button>\n                  </td>\n                  <td className=\"px-6  py-3 text-right\">\n                    <NavLink\n                      to={`${rec.id}`}\n                      className=\"font-medium text-blue-600 dark:text-blue-500 hover:underline\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"20\"\n                        height=\"20\"\n                        viewBox=\"0 0 24 24\">\n                        <path d=\"M8.424 12.282l4.402 4.399-5.826 1.319 1.424-5.718zm15.576-6.748l-9.689 9.804-4.536-4.536 9.689-9.802 4.536 4.534zm-6 8.916v6.55h-16v-12h6.743l1.978-3h-10.721v16h20v-10.573l-2 2.023z\" />\n                      </svg>\n                    </NavLink>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </Form>\n    </>\n  );\n}\n"],
  "mappings": "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",
  "names": ["import_react", "receitas", "_"]
}
