{
  "version": 3,
  "sources": ["../../../../app/routes/folha/index_bak.tsx"],
  "sourcesContent": ["import type { LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { NavLink, useLoaderData } from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport { Navbar } from \"~/components/Navbar\";\nimport { getFuncionarios } from \"~/utils/folha.server\";\nimport { Direita, Edit, Money } from \"~/utils/icons\";\nimport type { tipoFunc } from \"~/utils/types.server\";\nimport { FaCaretRight } from \"react-icons/fa\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const funcionarios = await getFuncionarios();\n  return json({ funcionarios });\n};\n\nexport default function Folha() {\n  const { funcionarios } = useLoaderData();\n  const [filtrar, setFiltrar] = useState(\"\");\n  const funcFilter = funcionarios?.filter((funcionarios: { nome: string }) =>\n    funcionarios.nome.toLowerCase().includes(filtrar.toLowerCase())\n  );\n  return (\n    <>\n      <Navbar />\n      <h1 className=\"flex  justify-center font-bold text-slate-500 text-xl\">\n        FOLHA DE PAGAMENTO\n      </h1>\n      <div className=\"flex justify-around items-center\">\n        <div className=\"relative w-1/4\">\n          <div className=\"flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none\">\n            <svg\n              className=\"w-5 h-5 text-gray-500 dark:text-gray-400\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n              ></path>\n            </svg>\n          </div>\n          <input\n            type=\"search\"\n            id=\"search\"\n            value={filtrar}\n            onChange={(e) => setFiltrar(e.target.value)}\n            placeholder=\"Procurar\"\n            className=\"block p-2 pl-10 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300  \"\n          />\n        </div>\n\n        <NavLink\n          className=\" flex mr-4  focus:outline-none text-white bg-blue-500 hover:bg-blue-800 focus:ring-4 focus:ring-yellow-300  rounded-lg text-sm px-5 py-2.5  mb-2 dark:focus:ring-yellow-900\"\n          to=\"new\"\n        >\n          Nova\n        </NavLink>\n      </div>\n\n      <div className=\" flex justify-center \">\n        <table className=\"w-3/4 mt-4 text-sm text-left border-l-2 border-r-2 border-slate-100 text-gray-500 \">\n          <thead className=\"text-xs text-gray-700 uppercase bg-stone-100  \">\n            <tr>\n              <th scope=\"col\" className=\"px-10 py-3 text-left\">\n                Nome\n              </th>\n              <th scope=\"col\" className=\"px-6 py-3\">\n                Fun\u00E7\u00E3o\n              </th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left\">\n                Modalidade\n              </th>\n              <th scope=\"col\" className=\"px-6 py-3 text-center\">\n                Pago\n              </th>\n              <th scope=\"col\" className=\"px-6 py-3\"></th>\n              <th scope=\"col\" className=\"px-6 py-3\"></th>\n            </tr>\n          </thead>\n          <tbody>\n            {funcFilter.map((func: tipoFunc) => (\n              <tr\n                key={func.id}\n                className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\n              >\n                <th scope=\"row\" className=\"px-6  whitespace-nowrap\">\n                  <div className=\"pl-3\">\n                    <div className=\" text-gray-800\">{func.nome}</div>\n                    <div className=\" flex items-center font-light text-xs text-blue-500\">\n                      {\n                        // @ts-ignore\n                        func.salarios\n                          .map((s) => s.valor)\n                          .pop()\n                          .toLocaleString(\"pt-br\", {\n                            minimumFractionDigits: 2,\n                          })\n                      }\n                      <FaCaretRight className=\"mr-1 ml-1\" />\n                      <div className=\"text-green-600\">\n                        {\n                          // @ts-ignore\n                          func.salarios\n                            .map((s) => s.valor + s.fgts + s.ferias + s.decimo)\n                            .pop()\n                            .toLocaleString(\"pt-br\", {\n                              minimumFractionDigits: 2,\n                            })\n                        }\n                      </div>\n                      <FaCaretRight className=\"mr-1 ml-1\" />\n                      <div className=\"text-gray-600\">{func.conta}</div>\n                    </div>\n                  </div>\n                </th>\n                <td className=\"px-6 py-3 \">{func.funcao}</td>\n                <td className=\"px-6 py-3 \">{func.modalidade}</td>\n                <td className=\"px-6 py-3 text-center \">\n                  <input\n                    type=\"checkbox\"\n                    readOnly\n                    checked={!!func.salarios.map((s) => s.pago).pop()}\n                  ></input>\n                </td>\n\n                <td className=\"px-2 py-3 text-right\">\n                  <NavLink\n                    to={`salario/${func.id}`}\n                    className=\"font-medium text-green-600 dark:text-blue-500 hover:underline\"\n                  >\n                    <Money />\n                  </NavLink>\n                </td>\n                <td className=\"px-4  py-3 text-right\">\n                  <NavLink\n                    to={`${func.id}`}\n                    className=\"font-medium text-stone-500 \"\n                  >\n                    <Edit />\n                  </NavLink>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n"],
  "mappings": "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",
  "names": ["import_react", "funcionarios"]
}
