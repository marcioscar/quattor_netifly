{
  "version": 3,
  "sources": ["../../../app/routes/folha.salario.$pagamento.tsx"],
  "sourcesContent": ["import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, useLoaderData, useTransition } from \"@remix-run/react\";\nimport { format } from \"date-fns\";\nimport { pt } from \"date-fns/locale\";\nimport { useEffect, useRef, useState } from \"react\";\nimport _ from \"lodash\";\nimport { Navbar } from \"~/components/Navbar\";\nimport {\n  getFuncionario,\n  createSalario,\n  deleteSalario,\n  pagarSalario,\n} from \"~/utils/folha.server\";\nimport { Pagar } from \"~/utils/icons\";\nimport { Delete } from \"~/utils/icons\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const form = await request.formData();\n  let values = Object.fromEntries(form);\n  const action = form.get(\"_action\");\n\n  if (action === \"cadastrar\") {\n    const salario = await createSalario(values);\n    return redirect(`/folha`);\n    // return redirect(`folha/salario/${salario.id}`);\n  } else if (action === \"delete\") {\n    await deleteSalario(values);\n    return redirect(`/folha`);\n  } else if (action === \"pagar\") {\n    await pagarSalario(values);\n    return redirect(`/folha`);\n  }\n};\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const funcionario = await getFuncionario(params.pagamento as string);\n  return json({ funcionario });\n};\n\nexport default function Pagamento() {\n  const transition = useTransition();\n  let isAdding = transition.state === \"submitting\";\n  let formRef = useRef();\n  const [salId, setSalId] = useState(\"\");\n  useEffect(() => {\n    if (!isAdding) {\n      // @ts-ignore\n      formRef.current?.reset();\n    }\n  }, [isAdding]);\n  const { funcionario } = useLoaderData();\n\n  const PagFechado = funcionario.salarios.map((s: any) => s.pago).pop();\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"container mx-auto\">\n        <div className=\"  p-6 bg-white border-b-2 border-stone-300 text-center\">\n          <h3 className=\"text-2xl font-bold\">{funcionario.nome}</h3>\n          <div className=\" space-x-4\">\n            <span className=\"text-sm uppercase text-gray-500\">\n              {funcionario.funcao}\n            </span>\n            <span className=\"text-gray-400\">|</span>\n            <span className=\"text-sm uppercase text-gray-500\">\n              {funcionario.modalidade}\n            </span>\n            <span className=\"text-gray-400\">|</span>\n            <span className=\"text-sm uppercase text-gray-500\">\n              {funcionario.conta}\n            </span>\n          </div>\n        </div>\n\n        <Form\n          // @ts-ignore\n          ref={formRef}\n          method=\"post\"\n          className=\" bg-stone-100 p-6 container mt-4 mx-auto px-10\"\n        >\n          <div className=\"grid gap-6 mb-2 ml-80 mr-80 \">\n            <input\n              hidden\n              type=\"text\"\n              name=\"id\"\n              defaultValue={funcionario?.id}\n            />\n            <input hidden type=\"text\" name=\"sal_id\" defaultValue={salId} />\n            {PagFechado && (\n              <div className=\"\">\n                <label\n                  htmlFor=\"valor\"\n                  className=\"block mb-2  text-sm font-medium text-gray-900 \"\n                >\n                  Valor\n                </label>\n                <input\n                  type=\"float\"\n                  className=\"w-full p-2 rounded-xl my-2\"\n                  placeholder=\"Valor\"\n                  name=\"valor\"\n                />\n                <label\n                  htmlFor=\"data\"\n                  className=\"block mb-2 text-sm font-medium  dark:text-gray-300\"\n                >\n                  Data\n                </label>\n                <input\n                  type=\"date\"\n                  id=\"data\"\n                  name=\"data\"\n                  className=\"w-full p-2 rounded-xl my-2 \"\n                />\n                <div className=\"w-full text-right\">\n                  <button\n                    type=\"submit\"\n                    className=\"rounded-xl  bg-blue-500 text-white px-3 py-2 font-semibold transition duration-300 ease-in-out hover:bg-blue-700 hover:-translate-y-1\"\n                    name=\"_action\"\n                    value=\"cadastrar\"\n                  >\n                    {transition.state === \"submitting\"\n                      ? \"Cadastrando...\"\n                      : \"Cadastrar\"}\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\" flex mt-2 justify-center \">\n            <table className=\"w-3/4 text-sm text-left text-gray-500 \">\n              <thead className=\"text-xs text-gray-700 uppercase  \">\n                <tr>\n                  <th scope=\"col\" className=\"px-6 py-3\">\n                    Data\n                  </th>\n                  <th scope=\"col\" className=\"px-6 text-right py-3\">\n                    Valor\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left\">\n                    Refer\u00EAncia\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-center\">\n                    Pago\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {_.orderBy(funcionario.salarios, [\"data\"], [\"desc\"]).map(\n                  (sal: any) => (\n                    <tr\n                      key={sal.sal_id}\n                      className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\n                    >\n                      <th\n                        scope=\"row\"\n                        className=\"px-6   font-medium text-gray-900 dark:text-white whitespace-nowrap\"\n                      >\n                        {format(new Date(sal.data), \"dd-MMM\", { locale: pt })}\n                      </th>\n                      <td className=\"px-6 py-3 text-right \">\n                        {sal.valor.toLocaleString(\"pt-br\", {\n                          minimumFractionDigits: 2,\n                        })}\n                      </td>\n                      <td className=\"px-6 py-3 \">{sal.referencia}</td>\n\n                      <td className=\" py-3 text-center \">\n                        <input\n                          type=\"checkbox\"\n                          readOnly\n                          checked={sal.pago}\n                        ></input>\n                      </td>\n                      <td>\n                        <button\n                          className=\"text-orange-400 mr-2 \"\n                          type=\"submit\"\n                          name=\"_action\"\n                          value=\"pagar\"\n                          onClick={() => setSalId(sal.sal_id)}\n                        >\n                          <Pagar />\n                        </button>\n                      </td>\n                      <td>\n                        <button\n                          className=\"text-red-500 mr-2 \"\n                          type=\"submit\"\n                          name=\"_action\"\n                          value=\"delete\"\n                          onClick={() => setSalId(sal.sal_id)}\n                        >\n                          <Delete />\n                        </button>\n                      </td>\n                    </tr>\n                  )\n                )}\n              </tbody>\n            </table>\n          </div>\n        </Form>\n      </div>\n    </>\n  );\n}\n"],
  "mappings": "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",
  "names": ["import_react", "_"]
}
